#修改构建版本号触发重新创建项目文件
SET(BUILD_VERSION 1)

#设定项目名称
SET(THIS_PROJECT_NAME MyOCR)

#设定QT4环境,参考FindQt4.cmake
FIND_PACKAGE(Qt4 REQUIRED)

#引入需要的Qt库，必须放在QT_USE_FILE之前
SET(QT_USE_QTMAIN TRUE)
#SET(QT_USE_QTXML TRUE)
#SET(QT_USE_QTOPENGL TRUE)

#引入Qt必要的设定
INCLUDE(${QT_USE_FILE})
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR})

#第三方头文件和库文件目录
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
#LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib)

#设定源文件
FILE(GLOB CPP_FILES "*.cpp")
SET(HEADER_FILES) #包含Q_OBJECT的头文件
FILE(GLOB UI_FILES "*.ui")
SET(QRC_FILES)

#对Qt源文件进行处理
QT4_WRAP_CPP(MOC_FILES ${HEADER_FILES} )
QT4_WRAP_UI(UIC_FILES ${UI_FILES})
QT4_ADD_RESOURCES(RES_FILES ${QRC_FILES})

#对生成文件分组
SOURCE_GROUP("UI" FILES  
	${UI_FILES}  
)
SOURCE_GROUP("Generated" FILES  
	${MOC_FILES}
	${UIC_FILES}
	${RES_FILES}
)

#目标文件和链接文件
ADD_EXECUTABLE(${THIS_PROJECT_NAME} ${CPP_FILES} ${MOC_FILES} ${UIC_FILES} ${RES_FILES})
TARGET_LINK_LIBRARIES(${THIS_PROJECT_NAME} ${QT_LIBRARIES})

#链接第三方lib文件
FILE(GLOB LIB_FILES "${PROJECT_SOURCE_DIR}/lib/*.lib")
TARGET_LINK_LIBRARIES(${THIS_PROJECT_NAME} ${LIB_FILES})

#拷贝第三方dll文件到执行目录
FILE(GLOB DLL_FILES  "${PROJECT_SOURCE_DIR}/lib/*.dll")
FOREACH(DLL_FILE ${DLL_FILES})
	add_custom_command(TARGET ${THIS_PROJECT_NAME} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy_if_different
		"${DLL_FILE}"
		"${CMAKE_CURRENT_BINARY_DIR}/$<CONFIGURATION>"
	)
ENDFOREACH(DLL_FILE)

#避免启动时出现命令行窗口
IF(WIN32)
    SET_TARGET_PROPERTIES(${THIS_PROJECT_NAME} PROPERTIES LINK_FLAGS_RELEASE "/SUBSYSTEM:WINDOWS")
ENDIF()
